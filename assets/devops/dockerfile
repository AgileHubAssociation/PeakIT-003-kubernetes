FROM ubuntu:18.04

ENV TZ="Etc/UTC" \
    COMPOSER_ALLOW_SUPERUSER="1" \
    COMPOSER_HOME="/root/.composer" \
    DOMAIN="example.com" \
    SENDMAIL_HOST="localhost" \
    SENDMAIL_PORT="587" \
    SENDMAIL_USER="admin" \
    SENDMAIL_PASSWORD="password"

RUN set -ex; \
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone; \
    apt-get update; \
    apt-get install -y inetutils-ping software-properties-common language-pack-en-base wget net-tools apt-utils supervisor cron git curl build-essential zip unzip memcached tree supervisor gnupg apt-transport-https msmtp-mta ca-certificates openssl ssl-cert dnsutils ldap-utils mysql-client; \
    LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php; \
    apt-get update; \
    DEBIAN_FRONTEND=noninteractive apt-get install -y php7.3 php7.3-fpm php7.3-cli php7.3-common php7.3-opcache php-memcached \
    php7.3-curl php7.3-gd php7.3-imagick php7.3-intl php7.3-json php7.3-ldap php7.3-mbstring php7.3-mysql php7.3-sqlite3 php7.3-xml php7.3-xmlrpc php7.3-zip; \
    apt-get install -y nginx autoconf build-essential libicu-dev libxslt-dev libmcrypt-dev libxml2-dev libcurl4-openssl-dev libmcrypt-dev mysql-client apt-utils ldap-utils libldap2-dev libc-client-dev libkrb5-dev libgmp-dev libgmp3-dev libfreetype6-dev libc6-dev libpng-dev libjpeg-dev libgd-dev openssl libmemcached-dev zlib1g-dev ssl-cert; \
    apt-get autoremove --assume-yes; \
    apt-get clean; \
    make-ssl-cert generate-default-snakeoil --force-overwrite; \
    mkdir -p /run/php && chmod -R 755 /run/php && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    ;

# Create the log file to be able to run tail
#RUN echo "*/30 * * * * cd /var/www/html/website.content; /usr/bin/php -q wp-cron.php" >> cronexample
#RUN crontab cronexample
#RUN rm cronexample && service cron start

# Install tools and applications through pear. Binaries will be accessible in your PATH.
#RUN pear install pear/PHP_CodeSniffer

# copy original php.ini configuration
#ADD php.ini /usr/local/etc/php

# tweak php.ini configuration
RUN sed -i -e 's~.*expose_php = .*~expose_php = Off~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*date.timezone =.*~date.timezone = "UTC"~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*session.cookie_httponly =.*~session.cookie_httponly = 1~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*session.use_trans_sid =.*~session.use_trans_sid = 0~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*session.use_strict_mode =.*~session.use_strict_mode = 1~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*session.use_cookies =.*~session.use_cookies = 1~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*session.use_only_cookies =.*~session.use_only_cookies = 1~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*session.cookie_samesite =.*~session.cookie_samesite = "Lax"~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*default_charset = .*~default_charset = "UTF-8"~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~display_errors = .*~display_errors = Off~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's/error_reporting = .*/error_reporting = E_ALL \& ~E_NOTICE \& ~E_WARNING \& ~E_DEPRECATED \& ~E_STRICT/' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~upload_max_filesize = .*~upload_max_filesize = 32M~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~post_max_size = .*~post_max_size = 32M~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~max_execution_time = .*~max_execution_time = 120~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~memory_limit = .*~memory_limit = 128M~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*sendmail_path =.*~sendmail_path = "/usr/bin/msmtp -t"~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*mail.add_x_header = .*~mail.add_x_header = Off~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*open_basedir =.*~open_basedir = "/var/lib/php:/var/www:/usr/local/bin:/tmp"~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*cgi.fix_pathinfo=.*~cgi.fix_pathinfo=0~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*opcache.enable=.*~opcache.enable=1~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*session.save_handler =.*~session.save_handler = memcached~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~;session.save_path =.*~session.save_path = memcached-geo:11211~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*opcache.interned_strings_buffer=.*~opcache.interned_strings_buffer=64~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~.*disable_functions =.*~disable_functions = pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,exec,passthru,shell_exec,system,popen,parse_ini_file,show_source~' /etc/php/7.3/fpm/php.ini && \
    sed -i -e 's~;catch_workers_output = .*~catch_workers_output = yes~' /etc/php/7.3/fpm/pool.d/www.conf && \
    sed -i -e 's~.*listen.backlog =.*~listen.backlog = 1024~' /etc/php/7.3/fpm/pool.d/www.conf && \
    sed -i -e 's~.*listen = .*~listen = 127.0.0.1:9000~' /etc/php/7.3/fpm/pool.d/www.conf && \
    sed -i -e 's~;clear_env = no~clear_env = no~' /etc/php/7.3/fpm/pool.d/www.conf && \
    sed -i -e 's~.*pm = .*~pm = ondemand~' /etc/php/7.3/fpm/pool.d/www.conf && \
    sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    printf "account default\ndomain ${DOMAIN}\nhost ${SENDMAIL_HOST}\nport ${SENDMAIL_PORT}\ntls on\ntls_starttls on\nauth on\nuser ${SENDMAIL_USER}\npassword ${SENDMAIL_PASSWORD}\nfrom noreply@${DOMAIN}\nsyslog LOG_MAIL\n" > /etc/msmtprc

# nginx basic conf
COPY devops/localhost.crt /etc/ssl/certs/localhost.crt
COPY devops/localhost.key /etc/ssl/private/localhost.key
COPY devops/nginx.conf /etc/nginx/nginx.conf
COPY devops/default.conf /etc/nginx/sites-available/default
RUN rm -f /etc/nginx/sites-enabled/default
RUN ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default
#RUN ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log

# Install Composer and make it available in the PATH
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer

# Set locales
RUN locale-gen en_US.UTF-8

WORKDIR /var/www/html/

# Copy composer files into the app directory.
COPY --chown=www-data composer.json ./

# Install dependencies with Composer.
# --prefer-source fixes issues with download limits on Github.
# --no-interaction makes sure composer can run fully automated
# RUN composer install --prefer-source --no-interaction

COPY --chown=www-data example ./example
RUN rm -f ./example/config.php
COPY --chown=www-data config.php ./example/config.php

#Install supervisor
RUN mkdir -p /etc/supervisor/conf.d /var/run/php /var/log/supervisor
COPY devops/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
EXPOSE 80 443
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
